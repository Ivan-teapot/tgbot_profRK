name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug environment
      run: |
        echo "üîç Checking pre-installed tools:"
        docker --version
        docker compose version
        docker-compose --version || echo "docker-compose not found (this is normal)"
        echo "üìÅ Project structure:"
        find . -type f -name "*.py" -o -name "*.txt" -o -name "Dockerfile*" -o -name "*.yml" | head -15

    - name: Validate Docker configuration
      run: |
        echo "üîß Validating Docker setup..."
        docker compose config
        docker build -t test-image .

    - name: Start services
      run: |
        echo "üöÄ Starting services..."
        docker compose up -d db
        sleep 10  # Wait for DB
        
        # Start main services
        docker compose up -d service-root service-user
        sleep 15  # Wait for services to initialize

    - name: Check services status
      run: |
        echo "üìä Services status:"
        docker compose ps
        echo ""
        echo "üîç Checking running containers:"
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

    - name: Test service connectivity
      run: |
        echo "üåê Testing service connectivity..."
        # Test if services are responding (with retries)
        timeout 60 bash -c 'until curl -s -f http://localhost:8000/ > /dev/null; do echo "Waiting for service-root..."; sleep 5; done' || echo "Service-root timeout"
        timeout 60 bash -c 'until curl -s -f http://localhost:8001/ > /dev/null; do echo "Waiting for service-user..."; sleep 5; done' || echo "Service-user timeout"
        
        # Final test
        curl -f http://localhost:8000/ && echo "‚úÖ Service-root is working!" || echo "‚ùå Service-root failed"
        curl -f http://localhost:8001/ && echo "‚úÖ Service-user is working!" || echo "‚ùå Service-user failed"

    - name: Show logs if tests fail
      if: failure()
      run: |
        echo "üìã Service logs:"
        docker compose logs service-root || echo "No service-root logs"
        docker compose logs service-user || echo "No service-user logs"
        docker compose logs db || echo "No db logs"

    - name: Cleanup
      if: always()
      run: docker compose down